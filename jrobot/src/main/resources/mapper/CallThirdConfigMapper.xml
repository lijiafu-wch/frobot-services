<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="f.s.frobot.dao.CallThirdConfigMapper">
  <resultMap id="BaseResultMap" type="f.s.frobot.model.CallThirdConfig">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="base_user_id" jdbcType="INTEGER" property="baseUserId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="k" jdbcType="VARCHAR" property="k" />
    <result column="v" jdbcType="VARCHAR" property="v" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, base_user_id, name, k, v, status, remark, ctime, utime
  </sql>
  <select id="selectByExample" parameterType="f.s.frobot.model.CallThirdConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `call_third_config`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from `call_third_config`
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `call_third_config`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from `call_third_config`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `call_third_config`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="f.s.frobot.model.CallThirdConfig">
    insert into `call_third_config` (id, base_user_id, name, 
      k, v, status, remark, 
      ctime, utime)
    values (#{id,jdbcType=INTEGER}, #{baseUserId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{k,jdbcType=VARCHAR}, #{v,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{ctime,jdbcType=TIMESTAMP}, #{utime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="f.s.frobot.model.CallThirdConfig">
    insert into `call_third_config`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('id')">
            id,
          </if>
          <if test="_parameter.hasSelective('base_user_id')">
            base_user_id,
          </if>
          <if test="_parameter.hasSelective('name')">
            name,
          </if>
          <if test="_parameter.hasSelective('k')">
            k,
          </if>
          <if test="_parameter.hasSelective('v')">
            v,
          </if>
          <if test="_parameter.hasSelective('status')">
            status,
          </if>
          <if test="_parameter.hasSelective('remark')">
            remark,
          </if>
          <if test="_parameter.hasSelective('ctime')">
            ctime,
          </if>
          <if test="_parameter.hasSelective('utime')">
            utime,
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            id,
          </if>
          <if test="baseUserId != null">
            base_user_id,
          </if>
          <if test="name != null">
            name,
          </if>
          <if test="k != null">
            k,
          </if>
          <if test="v != null">
            v,
          </if>
          <if test="status != null">
            status,
          </if>
          <if test="remark != null">
            remark,
          </if>
          <if test="ctime != null">
            ctime,
          </if>
          <if test="utime != null">
            utime,
          </if>
        </otherwise>
      </choose>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('id')">
            #{id,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('base_user_id')">
            #{baseUserId,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('name')">
            #{name,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('k')">
            #{k,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('v')">
            #{v,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('status')">
            #{status,jdbcType=TINYINT},
          </if>
          <if test="_parameter.hasSelective('remark')">
            #{remark,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('ctime')">
            #{ctime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.hasSelective('utime')">
            #{utime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            #{id,jdbcType=INTEGER},
          </if>
          <if test="baseUserId != null">
            #{baseUserId,jdbcType=INTEGER},
          </if>
          <if test="name != null">
            #{name,jdbcType=VARCHAR},
          </if>
          <if test="k != null">
            #{k,jdbcType=VARCHAR},
          </if>
          <if test="v != null">
            #{v,jdbcType=VARCHAR},
          </if>
          <if test="status != null">
            #{status,jdbcType=TINYINT},
          </if>
          <if test="remark != null">
            #{remark,jdbcType=VARCHAR},
          </if>
          <if test="ctime != null">
            #{ctime,jdbcType=TIMESTAMP},
          </if>
          <if test="utime != null">
            #{utime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
  <select id="countByExample" parameterType="f.s.frobot.model.CallThirdConfigExample" resultType="java.lang.Long">
    select count(*) from `call_third_config`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `call_third_config`
    <set>
      <choose>
        <when test="record.hasSelective()">
          <if test="record.hasSelective('id')">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.hasSelective('base_user_id')">
            base_user_id = #{record.baseUserId,jdbcType=INTEGER},
          </if>
          <if test="record.hasSelective('name')">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('k')">
            k = #{record.k,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('v')">
            v = #{record.v,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('status')">
            status = #{record.status,jdbcType=TINYINT},
          </if>
          <if test="record.hasSelective('remark')">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('ctime')">
            ctime = #{record.ctime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.hasSelective('utime')">
            utime = #{record.utime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.baseUserId != null">
            base_user_id = #{record.baseUserId,jdbcType=INTEGER},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.k != null">
            k = #{record.k,jdbcType=VARCHAR},
          </if>
          <if test="record.v != null">
            v = #{record.v,jdbcType=VARCHAR},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=TINYINT},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.ctime != null">
            ctime = #{record.ctime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.utime != null">
            utime = #{record.utime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `call_third_config`
    set id = #{record.id,jdbcType=INTEGER},
      base_user_id = #{record.baseUserId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      k = #{record.k,jdbcType=VARCHAR},
      v = #{record.v,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      utime = #{record.utime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="f.s.frobot.model.CallThirdConfig">
    update `call_third_config`
    <set>
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('base_user_id')">
            base_user_id = #{baseUserId,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('name')">
            name = #{name,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('k')">
            k = #{k,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('v')">
            v = #{v,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('status')">
            status = #{status,jdbcType=TINYINT},
          </if>
          <if test="_parameter.hasSelective('remark')">
            remark = #{remark,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('ctime')">
            ctime = #{ctime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.hasSelective('utime')">
            utime = #{utime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="baseUserId != null">
            base_user_id = #{baseUserId,jdbcType=INTEGER},
          </if>
          <if test="name != null">
            name = #{name,jdbcType=VARCHAR},
          </if>
          <if test="k != null">
            k = #{k,jdbcType=VARCHAR},
          </if>
          <if test="v != null">
            v = #{v,jdbcType=VARCHAR},
          </if>
          <if test="status != null">
            status = #{status,jdbcType=TINYINT},
          </if>
          <if test="remark != null">
            remark = #{remark,jdbcType=VARCHAR},
          </if>
          <if test="ctime != null">
            ctime = #{ctime,jdbcType=TIMESTAMP},
          </if>
          <if test="utime != null">
            utime = #{utime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="f.s.frobot.model.CallThirdConfig">
    update `call_third_config`
    set base_user_id = #{baseUserId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      k = #{k,jdbcType=VARCHAR},
      v = #{v,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="f.s.frobot.model.CallThirdConfigExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from `call_third_config`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from `call_third_config`
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `call_third_config`
    (id, base_user_id, name, k, v, status, remark, ctime, utime)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.baseUserId,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR}, 
        #{item.k,jdbcType=VARCHAR}, #{item.v,jdbcType=VARCHAR}, #{item.status,jdbcType=TINYINT}, 
        #{item.remark,jdbcType=VARCHAR}, #{item.ctime,jdbcType=TIMESTAMP}, #{item.utime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `call_third_config` (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id' == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'base_user_id' == column.value">
          #{item.baseUserId,jdbcType=INTEGER}
        </if>
        <if test="'name' == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'k' == column.value">
          #{item.k,jdbcType=VARCHAR}
        </if>
        <if test="'v' == column.value">
          #{item.v,jdbcType=VARCHAR}
        </if>
        <if test="'status' == column.value">
          #{item.status,jdbcType=TINYINT}
        </if>
        <if test="'remark' == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
        <if test="'ctime' == column.value">
          #{item.ctime,jdbcType=TIMESTAMP}
        </if>
        <if test="'utime' == column.value">
          #{item.utime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>