<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="f.s.frobot.dao.CallInstanceMapper">
  <resultMap id="BaseResultMap" type="f.s.frobot.model.CallInstance">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="instance_id" jdbcType="VARCHAR" property="instanceId" />
    <result column="instance_name" jdbcType="VARCHAR" property="instanceName" />
    <result column="group_id" jdbcType="VARCHAR" property="groupId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="script_Id" jdbcType="VARCHAR" property="scriptId" />
    <result column="base_user_id" jdbcType="INTEGER" property="baseUserId" />
    <result column="calling_num" jdbcType="INTEGER" property="callingNum" />
    <result column="called_num" jdbcType="INTEGER" property="calledNum" />
    <result column="call_num_prefix" jdbcType="INTEGER" property="callNumPrefix" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="strategy" jdbcType="VARCHAR" property="strategy" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, instance_id, instance_name, group_id, group_name, script_Id, base_user_id, calling_num, 
    called_num, call_num_prefix, status, strategy, ctime, utime
  </sql>
  <select id="selectByExample" parameterType="f.s.frobot.model.CallInstanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from call_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from call_instance
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from call_instance
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from call_instance
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from call_instance
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="f.s.frobot.model.CallInstance">
    insert into call_instance (id, instance_id, instance_name, 
      group_id, group_name, script_Id, 
      base_user_id, calling_num, called_num, 
      call_num_prefix, status, strategy, 
      ctime, utime)
    values (#{id,jdbcType=BIGINT}, #{instanceId,jdbcType=VARCHAR}, #{instanceName,jdbcType=VARCHAR}, 
      #{groupId,jdbcType=VARCHAR}, #{groupName,jdbcType=VARCHAR}, #{scriptId,jdbcType=VARCHAR}, 
      #{baseUserId,jdbcType=INTEGER}, #{callingNum,jdbcType=INTEGER}, #{calledNum,jdbcType=INTEGER}, 
      #{callNumPrefix,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{strategy,jdbcType=VARCHAR}, 
      #{ctime,jdbcType=TIMESTAMP}, #{utime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="f.s.frobot.model.CallInstance">
    insert into call_instance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('id')">
            id,
          </if>
          <if test="_parameter.hasSelective('instance_id')">
            instance_id,
          </if>
          <if test="_parameter.hasSelective('instance_name')">
            instance_name,
          </if>
          <if test="_parameter.hasSelective('group_id')">
            group_id,
          </if>
          <if test="_parameter.hasSelective('group_name')">
            group_name,
          </if>
          <if test="_parameter.hasSelective('script_Id')">
            script_Id,
          </if>
          <if test="_parameter.hasSelective('base_user_id')">
            base_user_id,
          </if>
          <if test="_parameter.hasSelective('calling_num')">
            calling_num,
          </if>
          <if test="_parameter.hasSelective('called_num')">
            called_num,
          </if>
          <if test="_parameter.hasSelective('call_num_prefix')">
            call_num_prefix,
          </if>
          <if test="_parameter.hasSelective('status')">
            status,
          </if>
          <if test="_parameter.hasSelective('strategy')">
            strategy,
          </if>
          <if test="_parameter.hasSelective('ctime')">
            ctime,
          </if>
          <if test="_parameter.hasSelective('utime')">
            utime,
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            id,
          </if>
          <if test="instanceId != null">
            instance_id,
          </if>
          <if test="instanceName != null">
            instance_name,
          </if>
          <if test="groupId != null">
            group_id,
          </if>
          <if test="groupName != null">
            group_name,
          </if>
          <if test="scriptId != null">
            script_Id,
          </if>
          <if test="baseUserId != null">
            base_user_id,
          </if>
          <if test="callingNum != null">
            calling_num,
          </if>
          <if test="calledNum != null">
            called_num,
          </if>
          <if test="callNumPrefix != null">
            call_num_prefix,
          </if>
          <if test="status != null">
            status,
          </if>
          <if test="strategy != null">
            strategy,
          </if>
          <if test="ctime != null">
            ctime,
          </if>
          <if test="utime != null">
            utime,
          </if>
        </otherwise>
      </choose>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('id')">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('instance_id')">
            #{instanceId,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('instance_name')">
            #{instanceName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('group_id')">
            #{groupId,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('group_name')">
            #{groupName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('script_Id')">
            #{scriptId,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('base_user_id')">
            #{baseUserId,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('calling_num')">
            #{callingNum,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('called_num')">
            #{calledNum,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('call_num_prefix')">
            #{callNumPrefix,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('status')">
            #{status,jdbcType=TINYINT},
          </if>
          <if test="_parameter.hasSelective('strategy')">
            #{strategy,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('ctime')">
            #{ctime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.hasSelective('utime')">
            #{utime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="instanceId != null">
            #{instanceId,jdbcType=VARCHAR},
          </if>
          <if test="instanceName != null">
            #{instanceName,jdbcType=VARCHAR},
          </if>
          <if test="groupId != null">
            #{groupId,jdbcType=VARCHAR},
          </if>
          <if test="groupName != null">
            #{groupName,jdbcType=VARCHAR},
          </if>
          <if test="scriptId != null">
            #{scriptId,jdbcType=VARCHAR},
          </if>
          <if test="baseUserId != null">
            #{baseUserId,jdbcType=INTEGER},
          </if>
          <if test="callingNum != null">
            #{callingNum,jdbcType=INTEGER},
          </if>
          <if test="calledNum != null">
            #{calledNum,jdbcType=INTEGER},
          </if>
          <if test="callNumPrefix != null">
            #{callNumPrefix,jdbcType=INTEGER},
          </if>
          <if test="status != null">
            #{status,jdbcType=TINYINT},
          </if>
          <if test="strategy != null">
            #{strategy,jdbcType=VARCHAR},
          </if>
          <if test="ctime != null">
            #{ctime,jdbcType=TIMESTAMP},
          </if>
          <if test="utime != null">
            #{utime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
  <select id="countByExample" parameterType="f.s.frobot.model.CallInstanceExample" resultType="java.lang.Long">
    select count(*) from call_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update call_instance
    <set>
      <choose>
        <when test="record.hasSelective()">
          <if test="record.hasSelective('id')">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.hasSelective('instance_id')">
            instance_id = #{record.instanceId,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('instance_name')">
            instance_name = #{record.instanceName,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('group_id')">
            group_id = #{record.groupId,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('group_name')">
            group_name = #{record.groupName,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('script_Id')">
            script_Id = #{record.scriptId,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('base_user_id')">
            base_user_id = #{record.baseUserId,jdbcType=INTEGER},
          </if>
          <if test="record.hasSelective('calling_num')">
            calling_num = #{record.callingNum,jdbcType=INTEGER},
          </if>
          <if test="record.hasSelective('called_num')">
            called_num = #{record.calledNum,jdbcType=INTEGER},
          </if>
          <if test="record.hasSelective('call_num_prefix')">
            call_num_prefix = #{record.callNumPrefix,jdbcType=INTEGER},
          </if>
          <if test="record.hasSelective('status')">
            status = #{record.status,jdbcType=TINYINT},
          </if>
          <if test="record.hasSelective('strategy')">
            strategy = #{record.strategy,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('ctime')">
            ctime = #{record.ctime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.hasSelective('utime')">
            utime = #{record.utime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.instanceId != null">
            instance_id = #{record.instanceId,jdbcType=VARCHAR},
          </if>
          <if test="record.instanceName != null">
            instance_name = #{record.instanceName,jdbcType=VARCHAR},
          </if>
          <if test="record.groupId != null">
            group_id = #{record.groupId,jdbcType=VARCHAR},
          </if>
          <if test="record.groupName != null">
            group_name = #{record.groupName,jdbcType=VARCHAR},
          </if>
          <if test="record.scriptId != null">
            script_Id = #{record.scriptId,jdbcType=VARCHAR},
          </if>
          <if test="record.baseUserId != null">
            base_user_id = #{record.baseUserId,jdbcType=INTEGER},
          </if>
          <if test="record.callingNum != null">
            calling_num = #{record.callingNum,jdbcType=INTEGER},
          </if>
          <if test="record.calledNum != null">
            called_num = #{record.calledNum,jdbcType=INTEGER},
          </if>
          <if test="record.callNumPrefix != null">
            call_num_prefix = #{record.callNumPrefix,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=TINYINT},
          </if>
          <if test="record.strategy != null">
            strategy = #{record.strategy,jdbcType=VARCHAR},
          </if>
          <if test="record.ctime != null">
            ctime = #{record.ctime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.utime != null">
            utime = #{record.utime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update call_instance
    set id = #{record.id,jdbcType=BIGINT},
      instance_id = #{record.instanceId,jdbcType=VARCHAR},
      instance_name = #{record.instanceName,jdbcType=VARCHAR},
      group_id = #{record.groupId,jdbcType=VARCHAR},
      group_name = #{record.groupName,jdbcType=VARCHAR},
      script_Id = #{record.scriptId,jdbcType=VARCHAR},
      base_user_id = #{record.baseUserId,jdbcType=INTEGER},
      calling_num = #{record.callingNum,jdbcType=INTEGER},
      called_num = #{record.calledNum,jdbcType=INTEGER},
      call_num_prefix = #{record.callNumPrefix,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      strategy = #{record.strategy,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      utime = #{record.utime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="f.s.frobot.model.CallInstance">
    update call_instance
    <set>
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('instance_id')">
            instance_id = #{instanceId,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('instance_name')">
            instance_name = #{instanceName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('group_id')">
            group_id = #{groupId,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('group_name')">
            group_name = #{groupName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('script_Id')">
            script_Id = #{scriptId,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('base_user_id')">
            base_user_id = #{baseUserId,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('calling_num')">
            calling_num = #{callingNum,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('called_num')">
            called_num = #{calledNum,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('call_num_prefix')">
            call_num_prefix = #{callNumPrefix,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('status')">
            status = #{status,jdbcType=TINYINT},
          </if>
          <if test="_parameter.hasSelective('strategy')">
            strategy = #{strategy,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('ctime')">
            ctime = #{ctime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.hasSelective('utime')">
            utime = #{utime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="instanceId != null">
            instance_id = #{instanceId,jdbcType=VARCHAR},
          </if>
          <if test="instanceName != null">
            instance_name = #{instanceName,jdbcType=VARCHAR},
          </if>
          <if test="groupId != null">
            group_id = #{groupId,jdbcType=VARCHAR},
          </if>
          <if test="groupName != null">
            group_name = #{groupName,jdbcType=VARCHAR},
          </if>
          <if test="scriptId != null">
            script_Id = #{scriptId,jdbcType=VARCHAR},
          </if>
          <if test="baseUserId != null">
            base_user_id = #{baseUserId,jdbcType=INTEGER},
          </if>
          <if test="callingNum != null">
            calling_num = #{callingNum,jdbcType=INTEGER},
          </if>
          <if test="calledNum != null">
            called_num = #{calledNum,jdbcType=INTEGER},
          </if>
          <if test="callNumPrefix != null">
            call_num_prefix = #{callNumPrefix,jdbcType=INTEGER},
          </if>
          <if test="status != null">
            status = #{status,jdbcType=TINYINT},
          </if>
          <if test="strategy != null">
            strategy = #{strategy,jdbcType=VARCHAR},
          </if>
          <if test="ctime != null">
            ctime = #{ctime,jdbcType=TIMESTAMP},
          </if>
          <if test="utime != null">
            utime = #{utime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="f.s.frobot.model.CallInstance">
    update call_instance
    set instance_id = #{instanceId,jdbcType=VARCHAR},
      instance_name = #{instanceName,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=VARCHAR},
      group_name = #{groupName,jdbcType=VARCHAR},
      script_Id = #{scriptId,jdbcType=VARCHAR},
      base_user_id = #{baseUserId,jdbcType=INTEGER},
      calling_num = #{callingNum,jdbcType=INTEGER},
      called_num = #{calledNum,jdbcType=INTEGER},
      call_num_prefix = #{callNumPrefix,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      strategy = #{strategy,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="f.s.frobot.model.CallInstanceExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from call_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from call_instance
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into call_instance
    (id, instance_id, instance_name, group_id, group_name, script_Id, base_user_id, calling_num, 
      called_num, call_num_prefix, status, strategy, ctime, utime)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.instanceId,jdbcType=VARCHAR}, #{item.instanceName,jdbcType=VARCHAR}, 
        #{item.groupId,jdbcType=VARCHAR}, #{item.groupName,jdbcType=VARCHAR}, #{item.scriptId,jdbcType=VARCHAR}, 
        #{item.baseUserId,jdbcType=INTEGER}, #{item.callingNum,jdbcType=INTEGER}, #{item.calledNum,jdbcType=INTEGER}, 
        #{item.callNumPrefix,jdbcType=INTEGER}, #{item.status,jdbcType=TINYINT}, #{item.strategy,jdbcType=VARCHAR}, 
        #{item.ctime,jdbcType=TIMESTAMP}, #{item.utime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into call_instance (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id' == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'instance_id' == column.value">
          #{item.instanceId,jdbcType=VARCHAR}
        </if>
        <if test="'instance_name' == column.value">
          #{item.instanceName,jdbcType=VARCHAR}
        </if>
        <if test="'group_id' == column.value">
          #{item.groupId,jdbcType=VARCHAR}
        </if>
        <if test="'group_name' == column.value">
          #{item.groupName,jdbcType=VARCHAR}
        </if>
        <if test="'script_Id' == column.value">
          #{item.scriptId,jdbcType=VARCHAR}
        </if>
        <if test="'base_user_id' == column.value">
          #{item.baseUserId,jdbcType=INTEGER}
        </if>
        <if test="'calling_num' == column.value">
          #{item.callingNum,jdbcType=INTEGER}
        </if>
        <if test="'called_num' == column.value">
          #{item.calledNum,jdbcType=INTEGER}
        </if>
        <if test="'call_num_prefix' == column.value">
          #{item.callNumPrefix,jdbcType=INTEGER}
        </if>
        <if test="'status' == column.value">
          #{item.status,jdbcType=TINYINT}
        </if>
        <if test="'strategy' == column.value">
          #{item.strategy,jdbcType=VARCHAR}
        </if>
        <if test="'ctime' == column.value">
          #{item.ctime,jdbcType=TIMESTAMP}
        </if>
        <if test="'utime' == column.value">
          #{item.utime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>